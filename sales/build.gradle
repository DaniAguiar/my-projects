import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask
buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		maven {
			url "http://packages.confluent.io/maven/"
		}
	}
	dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.17.0"
		classpath "org.postgresql:postgresql:42.2.14"
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE")
	}
}
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "java"
apply plugin: "application"
apply plugin: "com.commercehub.gradle.plugin.avro"
group = 'com.invillia.poc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "11"
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
mainClassName = "com.invillia.poc.sales.SalesApplication"
ext["junit-jupiter.version"] = "5.5.2"
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
	maven {
		url "http://packages.confluent.io/maven/"
	}
}
ext {
	set("springCloudVersion", "Hoxton.SR1")
}
dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
	compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.3.7.RELEASE'
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation "io.springfox:springfox-swagger-ui:2.9.2"
	implementation "org.postgresql:postgresql"
	implementation "org.apache.avro:avro:1.9.1"
	implementation "io.confluent:kafka-avro-serializer:5.2.2"
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	implementation "org.mapstruct:mapstruct:1.3.1.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
	testImplementation "com.tngtech.archunit:archunit-junit5-api:0.11.0"
	testRuntime "com.tngtech.archunit:archunit-junit5-engine:0.11.0"
	testImplementation("org.springframework.cloud:spring-cloud-stream-test-support") {
		exclude group: "junit"
	}
	testImplementation("org.springframework.boot:spring-boot-starter-test")
}
avro {
	stringType = "String"
	createSetters = false
	enableDecimalLogicalType = true
	fieldVisibility = "private"
}
task generateAvro(type: GenerateAvroJavaTask) {
	source("src/main/resources/avro")
	outputDir = file("$buildDir/generated-main-avro-java")
}
compileJava.source(generateAvro.outputs)
test {
	useJUnitPlatform()
	dependsOn "cleanTest"
	testLogging {
		events "passed", "skipped", "failed"
	}
}
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}